■資料の優先順位(文言とか)
①：このテキストファイル
②：先生の作った例文ファイル
③：その他外部資料

■コメントを入れる際は、「//」ではなく、以下の形式でお願いします。
------------------
/**
 *
 */
------------------

■文言の統一
・変数やクラス名やメソッド名
　　→言い切りの形(変数名はそのまま、クラス名には「～クラス」、メソッド名には「～メソッド」)
　　　例：クレジットカード情報存在チェックメソッド

・プログラムの動きの説明
　　→ですます。(句読点も！！)
　　　例：引数にてクレジットカード番号を指定する事で該当するものが存在するか確認できます。
　　　　　　結果はtrueもしくはfalseにて返され、存在すればtrue、存在しなければfalseとなります。

■クラス単位で以下の記述を加えて下さい。
@author MASAKI TANAKA

　　→作成者
参考URL：http://www.javadrive.jp/javadoc/tag/index1.html

@version 1.0
　　→バージョン
参考URL：http://www.javadrive.jp/javadoc/tag/index2.html

@since 1.0
　　→初めに導入されたバージョン
参考URL：http://www.javadrive.jp/javadoc/tag/index6.html

■getter.setterのコメント設定
今後作成する際は、以下の方法から作成して下さい。
作成済みのものに関しては、手順5・手順7のものに変更をお願い致します。

1,Alt+Shift+Sでgetter及びsetterの生成を選択

2,下の方にある「getter/setterのフォーマットはコード･テンプレート設定ページで構成されます。」のコード･テンプレートをクリック

3,プロジェクト名のプロパティ画面が表示され、上の方にあるプロジェクト固有の設定を可能にするのチェックボックスにチェックを入れる

4,生成されるコードとコメントを構成するの下にある選択欄からGetterを選択し、右にある編集をクリック

5,テンプレートの編集画面が表示され、パターンの入力欄に
【変更するのは『エラーメッセージ』の部分だけ！！！！】

/**
 * エラーメッセージ取得メソッド
 * @return ${bare_field_name} エラーメッセージ
 */

を入力しOKをクリック

6,生成されるコードとコメントを構成するの下にある選択欄からSetterを選択し、右にある編集をクリック

7,テンプレートの編集画面が表示され、パターンの入力欄に
【変更するのは『エラーメッセージ』の部分だけ！！！！】

/**
 * エラーメッセージ格納メソッド
 * @param ${bare_field_name} エラーメッセージ
 */

を入力しOKをクリック

8,最後に適用をクリックし完了。